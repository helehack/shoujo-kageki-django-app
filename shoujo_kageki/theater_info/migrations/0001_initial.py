# Generated by Django 4.1.4 on 2022-12-22 16:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GenreEnum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enum', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='GroupEnum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enum', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='NamedRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_lead', models.BooleanField(null=True)),
                ('is_otokoyaku_role', models.BooleanField(null=True)),
                ('jp_character_name', models.CharField(blank=True, max_length=255)),
                ('character_name_reading', models.CharField(blank=True, max_length=255)),
                ('character_name_romaji', models.CharField(max_length=255)),
                ('character_subtitle', models.TextField(blank=True, null=True)),
                ('parent_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='theater_info.namedrole')),
            ],
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(null=True)),
                ('date_end', models.DateField(null=True)),
                ('tour_venue', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('associated_groups', models.ManyToManyField(to='theater_info.groupenum')),
            ],
        ),
        migrations.CreateModel(
            name='SourceMaterialEnum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enum', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthdate', models.DateField(null=True)),
                ('deathdate', models.DateField(blank=True, null=True)),
                ('birth_country', models.CharField(blank=True, default='日本国', max_length=255)),
                ('birth_prefecture', models.CharField(blank=True, max_length=255)),
                ('birth_city', models.CharField(blank=True, max_length=255)),
                ('given_name', models.CharField(blank=True, max_length=255)),
                ('given_name_reading', models.CharField(blank=True, max_length=255)),
                ('given_name_romaji', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='StageName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reading', models.CharField(max_length=255)),
                ('romaji', models.CharField(max_length=255)),
                ('suffix', models.CharField(blank=True, max_length=10)),
                ('associated_staff_member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='theater_info.staffmember')),
            ],
        ),
        migrations.CreateModel(
            name='TriggerEnum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enum', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='VenueEnum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enum', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reading', models.CharField(max_length=255)),
                ('romaji', models.CharField(max_length=255)),
                ('work_category', models.CharField(choices=[('one_act', 'One-Act Play'), ('two_act', 'Two-Act Play'), ('revue', 'Revue'), ('dinner_show', 'Dinner Show'), ('music_salon', 'Music Salon'), ('buyoukai', 'Buyoukai'), ('tmp_tca', 'TMP/TCA/Mirror Ball Special'), ('other_special', 'Other Special'), ('other', 'Other')], max_length=15)),
                ('source_material', models.CharField(blank=True, max_length=255)),
                ('source_author', models.CharField(blank=True, max_length=255)),
                ('genre', models.ManyToManyField(blank=True, to='theater_info.genreenum')),
                ('parent_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='theater_info.work')),
                ('source_material_type', models.ManyToManyField(blank=True, to='theater_info.sourcematerialenum')),
                ('trigger_warnings', models.ManyToManyField(blank=True, to='theater_info.triggerenum')),
            ],
        ),
        migrations.CreateModel(
            name='WorkTextField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en-US', 'English'), ('ja-JP', '日本語')], max_length=5)),
                ('text_type', models.CharField(choices=[('plot_summary', 'Plot Summary'), ('trigger_info', 'Additional Trigger Information'), ('trivia', 'Trivia')], max_length=15)),
                ('text', models.TextField()),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.work')),
            ],
        ),
        migrations.CreateModel(
            name='WorkStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_staff_role', models.CharField(choices=[('writer', 'Writer'), ('choreographer', 'Choreographer'), ('composer', 'Composer')], max_length=15)),
                ('staff_stage_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.stagename')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.work')),
            ],
        ),
        migrations.CreateModel(
            name='WorkScene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en_title', models.CharField(blank=True, max_length=255)),
                ('jp_title', models.CharField(blank=True, max_length=255)),
                ('en_description', models.TextField(blank=True)),
                ('jp_description', models.TextField(blank=True)),
                ('associated_named_roles', models.ManyToManyField(to='theater_info.namedrole')),
                ('associated_work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.work')),
                ('associated_work_staff', models.ManyToManyField(to='theater_info.workstaff')),
                ('parent_scene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='theater_info.workscene')),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfileTextField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_text_choice', models.CharField(choices=[('blood_type', 'Blood Type'), ('nickname', 'Nickname'), ('flower', 'Favorite Flower'), ('food', 'Favorite Food'), ('color', 'Favorite Color'), ('hobby', 'Hobby'), ('collection', 'Collection'), ('talent', 'Special Talent'), ('name_origin', 'Origin of Stage Name'), ('role', 'Favorite Role'), ('like_to_play', 'Would Like to Try Playing'), ('trivia', 'Trivia')], max_length=15)),
                ('jp_text', models.CharField(blank=True, max_length=255)),
                ('en_text', models.CharField(blank=True, max_length=255)),
                ('show_on_profile', models.BooleanField(default=True)),
                ('source_material', models.CharField(default='Unknown', max_length=255)),
                ('source_year', models.CharField(default='None', max_length=4)),
                ('associated_staff_member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.staffmember')),
            ],
        ),
        migrations.AddField(
            model_name='staffmember',
            name='canonical_stage_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='theater_info.stagename'),
        ),
        migrations.CreateModel(
            name='ProductionRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.production')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.venueenum')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCastMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.production')),
                ('stage_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.stagename')),
            ],
        ),
        migrations.AddField(
            model_name='production',
            name='works',
            field=models.ManyToManyField(to='theater_info.work'),
        ),
        migrations.CreateModel(
            name='PerformanceStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance_staff_role', models.CharField(choices=[('director', 'Director'), ('conductor', 'Conductor')], max_length=15)),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.performance')),
                ('stage_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.stagename')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceCastMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('was_final_performance_for', models.BooleanField()),
                ('was_first_performance_for', models.BooleanField()),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.performance')),
                ('production_cast_member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.productioncastmember')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.namedrole')),
            ],
        ),
        migrations.AddField(
            model_name='performance',
            name='associated_production_run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.productionrun'),
        ),
        migrations.AddField(
            model_name='performance',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.work'),
        ),
        migrations.AddField(
            model_name='namedrole',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.work'),
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(blank=True)),
                ('stage_gender_role', models.CharField(blank=True, choices=[('otokoyaku', 'Otokoyaku'), ('musumeyaku', 'Musumeyaku'), ('both', 'Both'), ('unknown', 'Unknown')], max_length=15)),
                ('troupe_role', models.CharField(blank=True, choices=[('member', 'Member'), ('top_star', 'Top Star'), ('top_musumeyaku', 'Top Musumeyaku'), ('nibante', 'Nibante'), ('pretop_star', 'Star (Pre-Top Star System)'), ('kumichou', 'Kumichou'), ('fukukumichou', 'Vice Kumichou'), ('unknown', 'Unknown')], max_length=15)),
                ('associated_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.groupenum')),
                ('date_end_performance', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='group_depart', to='theater_info.performance')),
                ('date_start_performance', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='performance_joined_group', to='theater_info.performance')),
                ('stage_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='theater_info.stagename')),
            ],
        ),
        migrations.AddConstraint(
            model_name='stagename',
            constraint=models.UniqueConstraint(fields=('romaji', 'suffix'), name='Combination of romaji reading and suffix should be unique as it will be used as a URL slug.'),
        ),
    ]
